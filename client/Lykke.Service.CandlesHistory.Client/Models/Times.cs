// Code generated by Microsoft (R) AutoRest Code Generator 1.2.2.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

using Microsoft.Rest;
using Newtonsoft.Json;

namespace Lykke.Service.CandlesHistory.Client.Models
{
    public class Times
    {
        /// <summary>
        /// Initializes a new instance of the Times class.
        /// </summary>
        public Times()
        {
          CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Times class.
        /// </summary>
        public Times(string totalPersistTime, string averagePersistTime, string lastPersistTime)
        {
            TotalPersistTime = totalPersistTime;
            AveragePersistTime = averagePersistTime;
            LastPersistTime = lastPersistTime;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        private void CustomInit() => throw new System.NotImplementedException();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "TotalPersistTime")]
        public string TotalPersistTime { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "AveragePersistTime")]
        public string AveragePersistTime { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "LastPersistTime")]
        public string LastPersistTime { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (TotalPersistTime == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "TotalPersistTime");
            }
            if (AveragePersistTime == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "AveragePersistTime");
            }
            if (LastPersistTime == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "LastPersistTime");
            }
        }
    }
}
