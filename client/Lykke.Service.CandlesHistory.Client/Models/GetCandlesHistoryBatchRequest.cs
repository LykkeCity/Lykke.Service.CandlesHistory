// Code generated by Microsoft (R) AutoRest Code Generator 1.2.2.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Lykke.Service.CandlesHistory.Client.Models
{
    using Newtonsoft.Json;
    using System.Collections.Generic;
    
    public class GetCandlesHistoryBatchRequest
    {
        /// <summary>
        /// Initializes a new instance of the GetCandlesHistoryBatchRequest
        /// class.
        /// </summary>
        public GetCandlesHistoryBatchRequest()
        {
          CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the GetCandlesHistoryBatchRequest
        /// class.
        /// </summary>
        /// <param name="priceType">Possible values include: 'Unspecified',
        /// 'Bid', 'Ask', 'Mid'</param>
        /// <param name="timeInterval">Possible values include: 'Unspecified',
        /// 'Sec', 'Minute', 'Min5', 'Min15', 'Min30', 'Hour', 'Hour4',
        /// 'Hour6', 'Hour12', 'Day', 'Week', 'Month'</param>
        /// <param name="fromMoment">Inclusive from moment</param>
        /// <param name="toMoment">Exclusive to moment. If equals to the
        /// Lykke.Service.CandlesHistory.Models.CandlesHistory.GetCandlesHistoryBatchRequest.FromMoment,
        /// then exactly candle for exactly this moment will be
        /// returned</param>
        /// <param name="assetPairs"></param>
        public GetCandlesHistoryBatchRequest(CandlePriceType priceType, CandleTimeInterval timeInterval, System.DateTime fromMoment, System.DateTime toMoment, IList<string> assetPairs = default(IList<string>))
        {
            AssetPairs = assetPairs;
            PriceType = priceType;
            TimeInterval = timeInterval;
            FromMoment = fromMoment;
            ToMoment = toMoment;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        private void CustomInit() => throw new System.NotImplementedException();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "AssetPairs")]
        public IList<string> AssetPairs { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'Unspecified', 'Bid', 'Ask',
        /// 'Mid'
        /// </summary>
        [JsonProperty(PropertyName = "PriceType")]
        public CandlePriceType PriceType { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'Unspecified', 'Sec',
        /// 'Minute', 'Min5', 'Min15', 'Min30', 'Hour', 'Hour4', 'Hour6',
        /// 'Hour12', 'Day', 'Week', 'Month'
        /// </summary>
        [JsonProperty(PropertyName = "TimeInterval")]
        public CandleTimeInterval TimeInterval { get; set; }

        /// <summary>
        /// Gets or sets inclusive from moment
        /// </summary>
        [JsonProperty(PropertyName = "FromMoment")]
        public System.DateTime FromMoment { get; set; }

        /// <summary>
        /// Gets or sets exclusive to moment. If equals to the
        /// Lykke.Service.CandlesHistory.Models.CandlesHistory.GetCandlesHistoryBatchRequest.FromMoment,
        /// then exactly candle for exactly this moment will be returned
        /// </summary>
        [JsonProperty(PropertyName = "ToMoment")]
        public System.DateTime ToMoment { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
        }
    }
}
