// Code generated by Microsoft (R) AutoRest Code Generator 1.2.2.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

using Newtonsoft.Json;

namespace Lykke.Service.CandlesHistory.Client.Models
{
    /// <summary>
    /// Checks service is alive response
    /// </summary>
    public sealed class IsAliveResponse
    {
        /// <summary>
        /// Initializes a new instance of the IsAliveResponse class.
        /// </summary>
        public IsAliveResponse()
        {
          CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the IsAliveResponse class.
        /// </summary>
        /// <param name="name"></param>
        /// <param name="version">API version</param>
        /// <param name="env">Environment variables</param>
        /// <param name="isShuttingDown"></param>
        /// <param name="isShuttedDown"></param>
        /// <param name="persistence"></param>
        public IsAliveResponse(bool isShuttingDown, bool isShuttedDown, string name = default(string), string version = default(string), string env = default(string), PersistenceInfo persistence = default(PersistenceInfo))
        {
            Name = name;
            Version = version;
            Env = env;
            IsShuttingDown = isShuttingDown;
            IsShuttedDown = isShuttedDown;
            Persistence = persistence;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        private void CustomInit() => throw new System.NotImplementedException();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets API version
        /// </summary>
        [JsonProperty(PropertyName = "Version")]
        public string Version { get; set; }

        /// <summary>
        /// Gets or sets environment variables
        /// </summary>
        [JsonProperty(PropertyName = "Env")]
        public string Env { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsShuttingDown")]
        public bool IsShuttingDown { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsShuttedDown")]
        public bool IsShuttedDown { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Persistence")]
        public PersistenceInfo Persistence { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        // ReSharper disable once UnusedMember.Global
        public void Validate()
        {
            if (Persistence != null)
            {
                Persistence.Validate();
            }
        }
    }
}
